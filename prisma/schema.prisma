generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Wallet {
  id              String   @id @default(cuid())
  external_id     String   @unique
  balance_pennies Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model KycToken {
  token         String   @id
  date_created  DateTime @default(now())
  email         String
  product_id    Int
  plan_name     String
  expires_at    DateTime
  kyc_submitted Int      @default(0)
  session_id    String?

  @@index([email])
  @@index([token])
  @@index([session_id])
}

model Subscription {
  external_id           String   @id
  product_id            Int
  customer_first_name   String
  customer_middle_name  String
  customer_last_name    String
  customer_email        String
  review_status         String   @default("PENDING")

  shipping_line_1       String
  shipping_line_2       String
  shipping_line_3       String
  shipping_city         String
  shipping_postcode     String
  shipping_state        String
  shipping_country      String

  company_name          String
  company_trading_name String
  company_number        String
  organisation_type     Int
  telephone_number      String

  stripe_subscription_id String?
  start_date             DateTime @default(now())
  wallet_balance         Float    @default(0)

  members               CompanyMember[]
  scannedMails          ScannedMail[]

  @@index([customer_email])
}

model CompanyMember {
  id              Int      @id @default(autoincrement())
  subscription_id String
  first_name      String
  middle_name     String
  last_name       String
  phone_number    String
  email           String
  date_of_birth   DateTime

  subscription    Subscription @relation(fields: [subscription_id], references: [external_id])

  @@index([id])
}

model ScannedMail {
  id                 Int      @id @default(autoincrement())
  external_id        String
  url                String
  url_envelope_front String?
  url_envelope_back  String?
  file_name          String?
  created_at         DateTime @default(now())
  received_at        DateTime
  company_name       String

  sender_name        String
  document_title     String
  reference_number   String?
  summary            String
  industry           String

  categories         String
  sub_categories     String
  key_information    String?

  is_forwarded       Boolean   @default(false)
  forwarded_at       DateTime?

  subscription       Subscription @relation(fields: [external_id], references: [external_id])

  @@index([id])
  @@index([external_id])
}
